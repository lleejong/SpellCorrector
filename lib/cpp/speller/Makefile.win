##################################################
# include c-compiler environment makefile
##################################################
ifeq ($(origin SF1_SRC), undefined)
$(error no environment variable SF1_SRC))
else
include $(SF1_SRC)/build_system/common-defs.mak
endif

##################################################
# definition for target
##################################################
OBJS = SpellCorrector.obj \
	   SpellDictionary.obj \
	   SpellFactory.obj \
	   SpellTable.obj \
	   OtaInterface.obj \
	   OtaEng2Han.obj

INCS = SpellCorrector.h \
	   SpellDictionary.h \
	   SpellFactory.h \
	   SpellTable.h \
	   OtaInterface.h \
	   OtaEng2Han.h

LIB_OUT = speller.lib

INC_DIRS = /I"." \
		   /I"$(SRC_DIR)" \
		   /I"$(LIB_SRC_DIR)/sflogger" \
		   /I"$(LIB_SRC_DIR)/spr" \
		   /I"$(LIB_SRC_DIR)/unicode" \
		   /I"$(LIB_SRC_DIR)/mon" \
		   /I"$(LIB_SRC_DIR)/rgl" \
		   /I"$(LIB_SRC_DIR)/stemmer" \
		   /I"$(LIB_SRC_DIR)/li" \
		   /I"$(LIB_SRC_DIR)/la" \
		   /I"$(LIB_SRC_DIR)/la/wisekma-orange/src" \
		   /I"$(LIB_SRC_DIR)/la/wisekma-orange/src/interface"
#		   /I"$(LIB_SRC_DIR)/la/wisekma-blue/src/" \
		   /I"$(LIB_SRC_DIR)/la/wisekma-blue/src/ma" \
		   /I"$(LIB_SRC_DIR)/la/wisekma-blue/src/include"

ifdef SF1_EXTEND_ENGLISH
INC_DIRS += /I"$(LIB_SRC_DIR)/la/ema-v2/src" \
            /I"$(LIB_SRC_DIR)/la/ema-v2/src/include" \
            /I"$(LIB_SRC_DIR)/la/ema-v2/src/ma" \
            /I"$(LIB_SRC_DIR)/la/ema-v2/src/util" \
            /I"$(LIB_SRC_DIR)/la/ema-v2/src/wpl" \
            /I"$(LIB_SRC_DIR)/la/ema-v2/src/tagger" \
            /I"$(LIB_SRC_DIR)/la/ema-v2/src/tagger/maxent"
endif

ifdef SF1_EXTEND_JAPANESE
INC_DIRS += /I"$(LIB_SRC_DIR)/la/ijma-v1/include" \
		    /I"$(LIB_SRC_DIR)/la/ijma-v1/source/include" \
		    /I"$(LIB_SRC_DIR)/la/ijma-v1/source/libmecab"
endif

ifdef SF1_EXTEND_CHINESE
INC_DIRS += /I"$(LIB_SRC_DIR)/la/icma-v1/include"
endif

LIB_DIRS = /LIBPATH:"$(LIB_SRC_DIR)/sflogger" \
		   /LIBPATH:"$(LIB_SRC_DIR)/spr" \
		   /LIBPATH:"$(LIB_SRC_DIR)/unicode" \
		   /LIBPATH:"$(LIB_SRC_DIR)/mon" \
		   /LIBPATH:"$(LIB_SRC_DIR)/rgl" \
		   /LIBPATH:"$(LIB_SRC_DIR)/stemmer" \
		   /LIBPATH:"$(LIB_SRC_DIR)/la" \
		   /LIBPATH:"$(LIB_SRC_DIR)/li"

EXE_LIBS = sflogger.lib spr.lib unicode.lib mon.lib rgl.lib stemmer.lib la.lib li.lib

##################################################
# definition for test
##################################################
TEST_SOURCE = $(shell ls t_*.cpp)
TEST_OBJS   = $(TEST_SOURCE:.cpp=.obj)
TEST_EXE    = $(TEST_SOURCE:.cpp=.exe)

##################################################
# suffixes rules
##################################################
.SUFFIXES: .cpp .c .obj .d

##################################################
# all
##################################################
all: clean-out $(LIB_OUT)

##################################################
# library output
##################################################
$(LIB_OUT): $(OBJS)
	$(LIB_PROG) $(LIB_FLAGS) /out:$@ $(OBJS)

##################################################
# test
##################################################
test: clean-test $(TEST_EXE)

t_%.exe: t_%.obj $(LIB_OUT)
	$(EXE_PROG) $(EXE_FLAGS) $(EXE_CON_FLAGS) /out:$@ $(if $(DEBUG),/pdb:$(@:.exe=.pdb)) $? $(LIB_DIRS) $(EXE_LIBS)
ifeq ($(MT_PROG),mt.exe)
	$(MT_PROG) $(MT_FLAGS) /manifest $@.manifest /outputresource:"$@;#1" || exit 0
endif

##################################################
# automatic dependency
##################################################
ifneq ($(MAKECMDGOALS),clean)
include $(OBJS:.obj=.d)
include $(TEST_OBJS:.obj=.d)
endif

##################################################
# install
##################################################
install: install-library install-dictionary

install-library:
	@$(MKD_PROG) $(INC_DIR)
	@$(MKD_PROG) $(LIB_DIR)
	@echo "[+] install speller library: $(LIB_OUT)"
	@($(CPY_PROG) $(LIB_OUT) $(LIB_DIR)) || exit 1
	@echo "[+] install speller header:"
	@for header in $(INCS); do\
		echo "    + $$header"; \
		($(CPY_PROG) $$header $(INC_DIR)) || exit 1; \
	done

install-dictionary:
	@$(MKD_PROG) $(DEV_DIR)/knowledge/speller/0
	@echo "[+] install speller dictionary:"
	@$(CPY_PROG) speller.utf8 $(DEV_DIR)/knowledge/speller/0

##################################################
# compile
##################################################
%.obj: %.cpp
	$(CC_PROG) $(CC_FLAGS) $(INC_DIRS) /Fo$@ $(if $(DEBUG),/Fd$(@:.obj=.pdb)) $<

##################################################
# generate dependency > *.d
##################################################
%.d: %.cpp
	@gcc -MM $(shell echo $(INC_DIRS) | sed 's/\/I/\-I/g') $< | sed 's/\.o:/\.obj:/' | sed 's/\([a-z]\):\//\/cygdrive\/\1\//g' > $@

##################################################
# clean
##################################################
clean: clean-out clean-test
	$(DEL_PROG) $(OBJS) $(OBJS:.obj=.d) $(OBJS:.obj=.pdb) $(OBJS:.obj=.idb)
	$(DEL_PROG) $(TEST_OBJS) $(TEST_OBJS:.obj=.d) $(TEST_OBJS:.obj=.pdb) $(TEST_OBJS:.obj=.idb)
	$(DEL_PROG) vc??.pdb vc??.idb
clean-out:
	$(DEL_PROG) $(LIB_OUT)
clean-test:
	$(DEL_PROG) $(TEST_EXE) $(TEST_EXE:.ilk) $(TEST_EXE:.exe=.exe.manifest)

##################################################
# include c-compiler environment makefile
##################################################
include $(SF1_SRC)/build_system/common-rules.mak
